-- Create database and schema
CREATE DATABASE IF NOT EXISTS PROJECT_TRANSFORMATION;
USE DATABASE PROJECT_TRANSFORMATION;
CREATE SCHEMA IF NOT EXISTS PROJECT_DATA;
USE SCHEMA PROJECT_DATA;

-- Project metadata table
CREATE TABLE IF NOT EXISTS PROJECTS (
    PROJECT_ID VARCHAR(36) PRIMARY KEY,
    PROJECT_NAME VARCHAR(255) NOT NULL,
    PROJECT_TYPE VARCHAR(50) NOT NULL,
    START_DATE DATE NOT NULL,
    PLANNED_END_DATE DATE NOT NULL,
    ACTUAL_END_DATE DATE,
    STATUS VARCHAR(20) NOT NULL,
    PRIORITY VARCHAR(20) NOT NULL,
    OWNER VARCHAR(100) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Budget tracking table
CREATE TABLE IF NOT EXISTS PROJECT_BUDGET (
    BUDGET_ID VARCHAR(36) PRIMARY KEY,
    PROJECT_ID VARCHAR(36) REFERENCES PROJECTS(PROJECT_ID),
    PLANNED_BUDGET DECIMAL(15,2) NOT NULL,
    ACTUAL_BUDGET DECIMAL(15,2) NOT NULL,
    CURRENCY VARCHAR(3) DEFAULT 'USD',
    BUDGET_STATUS VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Risk assessment table
CREATE TABLE IF NOT EXISTS PROJECT_RISKS (
    RISK_ID VARCHAR(36) PRIMARY KEY,
    PROJECT_ID VARCHAR(36) REFERENCES PROJECTS(PROJECT_ID),
    RISK_TYPE VARCHAR(50) NOT NULL,
    RISK_DESCRIPTION TEXT NOT NULL,
    SEVERITY VARCHAR(20) NOT NULL,
    PROBABILITY VARCHAR(20) NOT NULL,
    MITIGATION_PLAN TEXT,
    STATUS VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Project milestones table
CREATE TABLE IF NOT EXISTS PROJECT_MILESTONES (
    MILESTONE_ID VARCHAR(36) PRIMARY KEY,
    PROJECT_ID VARCHAR(36) REFERENCES PROJECTS(PROJECT_ID),
    MILESTONE_NAME VARCHAR(255) NOT NULL,
    PLANNED_DATE DATE NOT NULL,
    ACTUAL_DATE DATE,
    STATUS VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Project delays table
CREATE TABLE IF NOT EXISTS PROJECT_DELAYS (
    DELAY_ID VARCHAR(36) PRIMARY KEY,
    PROJECT_ID VARCHAR(36) REFERENCES PROJECTS(PROJECT_ID),
    MILESTONE_ID VARCHAR(36) REFERENCES PROJECT_MILESTONES(MILESTONE_ID),
    DELAY_REASON TEXT NOT NULL,
    DELAY_DAYS INTEGER NOT NULL,
    IMPACT_LEVEL VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Create views for common queries
CREATE OR REPLACE VIEW PROJECT_STATUS_OVERVIEW AS
SELECT 
    p.PROJECT_ID,
    p.PROJECT_NAME,
    p.STATUS,
    p.PRIORITY,
    pb.PLANNED_BUDGET,
    pb.ACTUAL_BUDGET,
    COUNT(pr.RISK_ID) as ACTIVE_RISKS,
    COUNT(pd.DELAY_ID) as TOTAL_DELAYS
FROM PROJECTS p
LEFT JOIN PROJECT_BUDGET pb ON p.PROJECT_ID = pb.PROJECT_ID
LEFT JOIN PROJECT_RISKS pr ON p.PROJECT_ID = pr.PROJECT_ID AND pr.STATUS = 'ACTIVE'
LEFT JOIN PROJECT_DELAYS pd ON p.PROJECT_ID = pd.PROJECT_ID
GROUP BY 1, 2, 3, 4, 5, 6; 